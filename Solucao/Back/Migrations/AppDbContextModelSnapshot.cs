// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Back.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Back.models.EscalaMes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatasDisponiveis")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("Lista de datas associadas à escala do mês.");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Escalas");
                });

            modelBuilder.Entity("Back.models.EscalaRobo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Datas")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("Lista de datas associadas à escala do robô.");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MesAtual")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("EscalasRobo");
                });

            modelBuilder.Entity("Back.models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FotoCaminho")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Back.models.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Entrega1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Entrega2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Entrega3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Nota")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResponsavelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resultado")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubResponsavelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("SubResponsavelId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("Back.models.EscalaMes", b =>
                {
                    b.HasOne("Back.models.Funcionario", null)
                        .WithMany("EscalasMes")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Back.models.EscalaRobo", b =>
                {
                    b.HasOne("Back.models.Funcionario", "Funcionario")
                        .WithMany("EscalasRobo")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Back.models.Projeto", b =>
                {
                    b.HasOne("Back.models.Funcionario", "Responsavel")
                        .WithMany("ProjetosComoResponsavel")
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Back.models.Funcionario", "SubResponsavel")
                        .WithMany("ProjetosComoSubResponsavel")
                        .HasForeignKey("SubResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsavel");

                    b.Navigation("SubResponsavel");
                });

            modelBuilder.Entity("Back.models.Funcionario", b =>
                {
                    b.Navigation("EscalasMes");

                    b.Navigation("EscalasRobo");

                    b.Navigation("ProjetosComoResponsavel");

                    b.Navigation("ProjetosComoSubResponsavel");
                });
#pragma warning restore 612, 618
        }
    }
}
